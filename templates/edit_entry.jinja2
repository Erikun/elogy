<link rel="stylesheet" type="text/css" href="/static/main.css"/>

<style>
 
 body {
     background: #eee;
     display: flex;
     flex-direction: column;
 }

 /* some special magic to get the form to always fit the screen */ 
 div.container {         
     height: 100%;
     padding: 10px;
     background: white;
 }

 div.warning {
     background: #faa;
 }
 
 form  {
     display: flex;
     flex-direction: column;
     height: 100%;
     max-width: 1000px;
     margin-left: auto;
     margin-right: auto;
 }

 form fieldset {
     border: none;
     padding: 0;
 }
 
 .title {
     width: 100%
 }
 
 form input.title {
     width: 100%;
     border: 1px solid grey;
     padding: 3px;
 }

 form input.author, input.tag {
     min-width: 30px;
     margin-right: 2px;
     margin-bottom: 2px;
     border: 1px solid grey;
     padding: 3px;
     width: 100px;
 }
 
 form input:invalid {
     background-color: #fcc;
 }

 form select:invalid {
     background-color: #fcc;
 }
 
 div.editor-container {
     height: 100%;
     margin: 5px 0;
 }
 
 div.top {
     display: table;
     border-collapse: collapse;
     width: 100%;
 }

 div.top > div {
     display: table-row;
 }

 div.top > div > span {
     display: table-cell;
     padding: 2px;
     width: 100%;
 }

 div.top > div > label {
     display: table-cell;
     padding: 2px;
     width: 0;
 }

 .cancel {
     float: right;
 }
 
 /* Following some hacks to make TinyMCE fill the rest of the window */
 
 /*Container, container body, iframe*/
 /*With some extra haxxoring to avoid ruining some popups :( */
 .mce-tinymce:not(.mce-floatpanel), .mce-container-body:not(.mce-abs-layout), #code_ifr {
     min-height: 100%;
 }
 /*Container body*/
 .mce-container-body {
     position: absolute;
     bottom: 0;
     left: 0;
     right: 0;
 }
 /*Editing area*/
 .mce-container-body .mce-edit-area {
     position: absolute;
     top: 37px;
     bottom: 0;
     left: 0;
     right: 0;
 }
 /*Footer*/
 .mce-tinymce .mce-statusbar {
     position: absolute;
     bottom: 0;
     left: 0;
     right: 0;
 }
 
</style>

{% set logbook = logbook or entry.logbook %}

{% if lock %}
    <div class="warning">
        The entry is locked! This means someone (IP {{lock.owner_ip}}, at
        {{lock.timestamp}}) has, or is making changes to the entry. If you
        are sure this is not the case, you can press "submit" again.
        (Note that data can't be completely lost, but you may have to look
        in the revision history to find it.)
    </div>
{% endif %}

<header>
    {% if entry %}
        <div class="entry">
            Editing: <b>{{ entry.title }}</b>
        </div>
    {% elif follows %}    
        <div class="entry">
            Followup to: <a href="/entries/{{follows.id}}">{{ follows.title }}</a>
        </div>
    {% else %}
        <div class="entry">
            New entry
        </div>
    {% endif %}
</header>

<div class="container">
    
    <form id="entry-form" action="/entries/{{ entry.id if entry else 0 }}"
          method="post" enctype="multipart/form-data">

        {# hidden fields used to identify the submission #}
        <input type="hidden" name="logbook" value="{{ logbook.id }}">
        <input type="hidden" name="entry" value="{{ entry.id if entry else 0 }}">
        <input type="hidden" name="follows" value="{{ follows.id if follows else 0 }}">
        {% if lock %}
            <input type="hidden" name="unlock" value="{{ lock.id }}">
        {% endif %}
        
        <div class="top">
            
            <div class="title">
                <label for="title"> Title </label>
                <span>
                    <input class="title" type="text" name="title"
                           value="{{ entry.title if entry else follows.title if follows else '' }}">
                </span>
            </div>
            <div>
                <label for="author">Author(s)</label>
                <fieldset id="authors" class="authors">
                    {% if entry %}
                        {% for author in entry.authors -%}
                            <input class="author" type="text"
                                   name="author" value="{{ author }}"/>
                        {%- endfor %}
                    {% elif follows %}
                        {% for author in follows.authors -%}
                            <input class="author" type="text"
                                   name="author" value="{{ author }}"/>
                        {%- endfor %}                    
                    {% endif %}
                </fieldset>
            </div>
            {#
            <div>
                <label for="author">Tags</label>
                <fieldset id="tags" class="tags">
                    {% if entry and entry.tags %}
                        {% for tag in entry.tags -%}
                            <input class="tag" type="text"
                                   name="tag" value="{{ tag }}"/>
                        {%- endfor %}
                    {% elif follows and follows.tags %}
                        {% for tag in follows.tags -%}
                            <input class="tag" type="text"
                                   name="tag" value="{{ tag }}"/>
                        {%- endfor %}                    
                    {% endif %}
                </fieldset>
            </div>
            #}
        </div>

        {% if logbook.attributes %}  {# may be null, perhaps this should be handled somewhere else #}
            <div class="attributes">            
                {% for attribute in logbook.attributes %}
                    <label class="attribute" data-name="{{ attribute.name }}">
                        {% if attribute.required %}*{% endif %}
                        {{attribute.name}}
                        {% if attribute.type == "text" %}
                            <input type="text"
                                   name="attribute-{{ attribute.name }}"
                                   value="{{ entry.attributes[attribute.name] if entry else follows.attributes[attribute.name] if follows else '' }}"
                                   {% if attribute.required %}required="true"{% endif %}>
                        {% endif %}
                        {% if attribute.type == "number" %}
                            <input type="number" step="any"
                                   name="attribute-{{ attribute.name }}"
                                   value="{{ entry.attributes[attribute.name] if entry else follows.attributes[attribute.name] if follows else '' }}"
                                   {% if attribute.required %}required="true"{% endif %}>
                        {% endif %}
                        {% if attribute.type == "boolean" %}
                            <input type="checkbox"
                                   name="attribute-{{ attribute.name }}"
                                   {% if entry and entry.attributes[attribute.name] or follows and follows.attributes[attribute.name] %} checked {% endif %}>
                        {% endif %}
                        {% if attribute.type == "option" %}
                            <select name="attribute-{{ attribute.name }}"
                                    {% if attribute.required %}required="true"{% endif %}>
                                <option name=""></option>
                                {% for option in attribute.options %}
                                    <option name="{{ option }}"
                                            {%if option == (entry.attributes[attribute.name] if entry else follows.attributes[attribute.name] if follows else '') %} selected="selected" {% endif %}>{{option}}</option>
                                {% endfor %}
                            </select>
                        {% endif %}
                    </label>
                {% endfor %}
            </div>
        {% endif %}
        
        <div class="editor-container">
            <textarea id="content" cols="100" rows="20" name="content">{{ (entry.content if entry else '') | safe }}</textarea>            
        </div>
        
        <div>
            {% if entry %}
                {% for attachment in entry.attachments or [] %}
                    {{ attachment }}
                {% endfor %}
            {% endif %}
            <input type="file" name="attachments[]" size="40" multiple="multiple">
        </div>
        
        <div>
            <button id="submitButton" type="submit">Submit</button>
            <label>
                <input name="archived" type="checkbox" 
                       {% if entry and entry.archived %}checked{% endif %}/> 
                Archived
            </label>

            {# a bit primitive, but we can't just blindly use the referrer
               URL since that may not be an entry. #}
            <a href="about:blank"><div class="cancel">Cancel</div></a>                        
        </div>

    </form>
</div>


<script type="text/javascript" src="/static/color_attributes.js"></script>
<script src="/static/tinymce/tinymce.min.js"></script>

<script>

 // create an instance of TinyMCE HTML editor for the content

 (function () {

     // TODO: might be better to skip all the upload logic and just let
     // the editor include images in base64. We can decode them in the server.
     // That way, the association between entry and attachment should
     // become easier. However, I've found no way to also keep the file
     // name intact with TinyMCE when doing that :(

     function customUploadHandler (blobInfo, success, failure) {

         // custom upload handler that keeps the filename intact

         console.log("upload");
         
         var xhr, formData;

         xhr = new XMLHttpRequest();
         xhr.withCredentials = false;
         xhr.open('POST', '/attachments/{{ entry.id if entry else 0 }}?embedded=true');

         xhr.onload = function() {
             var json;

             if (xhr.status != 200) {
                 failure('HTTP Error: ' + xhr.status);
                 return;
             }

             json = JSON.parse(xhr.responseText);

             if (!json || typeof json.location != 'string') {
                 failure('Invalid JSON: ' + xhr.responseText);
                 return;
             }
             success(json.location);
         };

         formData = new FormData();
         formData.append('entry', '{{ entry.id if entry else 0 }}');
         formData.append('embedded', 'true');         
         var blob = blobInfo.blob(); 
         
         formData.append('file', blob, blob.name);
         
         xhr.send(formData);
     }

     tinymce.init({
         selector: '#content',
         plugins: "image textcolor paste table",
         toolbar: (
             "undo redo | styleselect |"
             + " bold italic forecolor backcolor | alignleft" 
             + " aligncenter alignright alignjustify |" 
             + " bullist numlist outdent indent | link image table"
         ),
         menubar: false,
         statusbar: false,
         height: "100%",
         relative_urls : false,  // otherwise images broken in editor
         apply_source_formatting: false,
         force_br_newlines: false,
         paste_data_images: true,
         /*          automatic_uploads: false,  // don't immediately upload images*/
         images_upload_handler: customUploadHandler
     });
       
 })();
 
</script>  


<script>
 
 window.addEventListener(
     "load",

     function () {

         // we don't want to bring up an "are you sure" dialog if the
         // user is actually submitting the form...
         var submitting = false;
         
         document.getElementById("submitButton")
                 .addEventListener(
                     "click", function () {
                         submitting = true;
                     });
                                       
         // Open a confirmation dialog if the user tries to navigate away.
         // Note: this does not work properly in FF, chrome is OK.
         function checkUnloadDialog (e) {
             if (submitting) {return}
             e.returnValue = "foo";
         }     
         window.addEventListener("beforeunload", checkUnloadDialog);

     });

</script>

<script src="/static/js/montag.js"></script>

<script>

 /* Maintain a list of authors that expands to allow adding and removing names */ 
 new Montag(document.getElementById("authors"), {name: "author",
                                                 placeholder: "Author",
                                                 classes: ["author"],
                                                 minWidth: 100, maxWidth: 300});

 /* new Montag(document.getElementById("tags"), {name: "tag",
  *                                              placeholder: "Tag",
  *                                              classes: ["tag"],
  *                                              minWidth: 50, maxWidth: 300});*/

 
</script>

